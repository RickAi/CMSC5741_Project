# Generated by Django 2.1.4 on 2018-12-09 05:42
import os

from django.db import migrations, models


def parse_prefix(img_name):
    prefix = ''
    if img_name and img_name.split('_'):
        prefix = img_name.split('_')[0]
    return prefix


def gen_celebrities(apps, schema_editor):
    Celebrity = apps.get_model('similarity', 'Celebrity')
    names_dir = "static/data/names/"
    count = 0
    save_count = 0
    datastore = {}
    for file in os.listdir(names_dir):
        with open(os.path.join(names_dir, file), encoding='ISO-8859-1') as f:
            # item example: nm0000001_rm124825600_1899-5-10_1968.jpg,Fred Astaire
            for item in f:
                data = item.split(',')
                if len(data) >= 2:
                    prefix = parse_prefix(data[0])
                    if prefix not in datastore:
                        name = data[1].rstrip()
                        datastore[prefix] = name
                        save_count += 1
                    count += 1
                    if count % 1000 == 0:
                        print("save_count=%d, total_count=%d" % (save_count, count))
                else:
                    print("error on item=%s" % item)
        print("process %s done." % file)
    # process all done with 523051 items, save_count=82654.
    print("process all done with %d items, save_count=%d." % (count, save_count))

    count = 0
    for prefix, name in datastore.items():
        Celebrity(prefix=prefix, name=name).save()
        count += 1
        if count % 10000 == 0:
            print("Current save count=%s" % count)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Celebrity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.RunPython(gen_celebrities),
    ]
